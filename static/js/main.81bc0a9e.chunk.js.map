{"version":3,"sources":["components/Game/Game.js","components/Button/Button.js","components/Keyboard/Keyboard.js","components/MainMenu/MainMenu.js","App.js","serviceWorker.js","index.js"],"names":["Game","props","state","currentGame","currentWord","split","map","e","letter","discovered","clickedLength","wordLeftovers","gallows","errors","i","React","createRef","n","this","current","style","gameEvent","el","getTotalLength","setTimeout","classList","add","clicked","length","currentWordSplit","filter","includes","triggerGallows","indexOf","prevProps","prevState","snapshot","setState","join","className","category","xmlns","width","height","version","viewBox","ref","opacity","d","key","toUpperCase","Component","Button","addClass","text","click","onClick","keyLayoutVariants","basic","Keyboard","clickedLetter","bind","randomLetter","fnClicked","j","f","undefined","MainMenu","categorySelect","randomTab","randomCat","addedCategories","categories","name","selected","difficulty","newCat","shouldBeRandom","tempEl","push","display","justifyContent","type","toggleGame","DIFF","App","event","word","gameStarted","replayGame","contentScreen","Object","keys","Words","cat","Math","round","random","Imiona","easy","pickedCategory","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.81bc0a9e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentGame: this.props.currentWord.split('').map(e => ({ letter: e, discovered: false })) };\r\n    this.clickedLength = 0;\r\n    this.wordLeftovers = this.props.currentWord;\r\n    this.gallows = [];\r\n    this.errors = 0;\r\n    for (let i = 0; i <= 10; i++) this.gallows[i] = React.createRef();\r\n  }\r\n  triggerGallows(n) {\r\n    if (n > 10) return;\r\n    this.gallows[n].current.style['stroke-dashoffset'] = 0;\r\n    if (n === 10) this.props.gameEvent('loss');\r\n  }\r\n  componentDidMount() {\r\n    for (let el of this.gallows) {\r\n      el.current.style['stroke-dasharray'] = el.current.style['stroke-dashoffset'] = el.current.getTotalLength();\r\n      setTimeout(() => el.current.classList.add('game__graphics__pathTransition'), 500);\r\n    }\r\n  }\r\n  getSnapshotBeforeUpdate() {\r\n    if (this.props.clicked.length > this.clickedLength) {\r\n      this.clickedLength++;\r\n      let currentWordSplit = this.props.currentWord.split('');\r\n      let comp = this.props.clicked.filter(e => !currentWordSplit.includes(e));\r\n      if (comp.length > this.errors) {\r\n        this.triggerGallows(this.errors++);\r\n      }\r\n      return this.state.currentGame.map(e => ({ letter: e.letter, discovered: !(this.props.clicked.indexOf(e.letter) === -1) }));\r\n    }\r\n    return null;\r\n  }\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (snapshot !== null) {\r\n      this.setState({ currentGame: snapshot });\r\n\r\n      this.wordLeftovers = this.wordLeftovers.split(this.props.clicked[this.props.clicked.length - 1]).join('');\r\n      if (this.wordLeftovers.length === 0) this.props.gameEvent('win');\r\n    }\r\n  }\r\n  render() {\r\n    let i = 0;\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game__category\">Kategoria: {this.props.category}</div>\r\n\r\n        <div className=\"game__graphics\">\r\n          <svg className=\"game__graphics__svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"249\" height=\"389\" version=\"1.1\" viewBox=\"0 0 64.327 102.923\">\r\n            <path ref={this.gallows[0]} className=\"game__graphics--thicker\" opacity=\"1\" d=\"m 0,294.88331 h 40.000001 v 0\" />\r\n            <path ref={this.gallows[1]} className=\"game__graphics--thicker\" d=\"m 20.000001,295.95487 c 0,-101.86458 0,-101.86458 0,-101.86458\" />\r\n            <path ref={this.gallows[2]} className=\"game__graphics--thicker\" d=\"M 18.4446,196.20696 H 58.444599\" />\r\n            <path ref={this.gallows[3]} className=\"game__graphics--thicker\" d=\"M 19.885157,210.79211 33.478126,196.07466\" />\r\n            <path ref={this.gallows[4]} d=\"m 56.11411,195.60346 0.02164,18.55148\" />\r\n            <path\r\n              ref={this.gallows[5]}\r\n              d=\"m 56.124933,213.69341 a 7.6729164,7.6729164 0 0 1 7.67291,7.67292 7.6729164,7.6729164 0 0 1 -7.67291,7.67291 7.6729164,7.6729164 0 0 1 -7.67292,-7.67291 7.6729164,7.6729164 0 0 1 7.67292,-7.67292 z\"\r\n            />\r\n            <path ref={this.gallows[6]} className=\"game__graphics--thick\" d=\"m 56.078153,229.28292 0.09355,24.50862\" />\r\n            <path ref={this.gallows[7]} d=\"m 56.013791,229.74093 -5.940065,12.20753\" />\r\n            <path ref={this.gallows[8]} d=\"m 56.165907,229.74093 5.940065,12.20753\" />\r\n            <path ref={this.gallows[9]} d=\"m 55.92999,253.3706 -3.648228,17.25892\" />\r\n            <path ref={this.gallows[10]} d=\"m 56.41341,253.3706 3.648228,17.25892\" />\r\n          </svg>\r\n        </div>\r\n        <div className=\"game__text\">\r\n          {this.state.currentGame.map(e => (\r\n            <div className=\"game__text__field\" key={'field_' + i++}>\r\n              <div className={e.discovered ? 'letter' : 'letter--hidden'}>{e.letter.toUpperCase()}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\n\r\nexport default function Button(props) {\r\n  let { addClass, text, click } = props;\r\n  return (\r\n    <button className={'button_clear ' + (addClass || '')} onClick={click}>\r\n      {text}\r\n    </button>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '../Button/Button';\r\n\r\n// TODO: Another keyboard layout variant\r\nconst keyLayoutVariants = {\r\n  basic: [\r\n    ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'],\r\n    ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l'],\r\n    ['z', 'x', 'c', 'v', 'b', 'n', 'm']\r\n  ]\r\n};\r\n\r\nexport default class Keyboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { clicked: [] };\r\n    this.clickedLetter = this.clickedLetter.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (!!this.props.randomLetter) this.clickedLetter(this.props.randomLetter);\r\n  }\r\n  clickedLetter(letter) {\r\n    this.props.fnClicked(letter);\r\n    this.setState({ clicked: [...this.state.clicked, letter] });\r\n  }\r\n  render() {\r\n    let i = 0,\r\n      j = 0;\r\n    return (\r\n      <div className=\"keyboard__wrapper\">\r\n        {keyLayoutVariants['basic'].map(e => (\r\n          <div className=\"keyboard__row\" key={'key_row_' + j++}>\r\n            {e.map(f => (\r\n              <Button\r\n                addClass={this.state.clicked.indexOf(f) === -1 ? 'keyboard__button' : 'keyboard__button keyboard__button--disabled'}\r\n                click={this.state.clicked.indexOf(f) === -1 ? () => this.clickedLetter(f) : undefined}\r\n                key={'key_' + i++}\r\n                text={f.toUpperCase()}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Button from '../Button/Button';\r\n\r\nexport default class MainMenu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.categorySelect = this.categorySelect.bind(this);\r\n    this.randomTab = { randomCat: true, addedCategories: props.categories.map(e => ({ name: e, selected: false })) };\r\n    this.state = { randomLetter: false, difficulty: 0, ...this.randomTab };\r\n  }\r\n  categorySelect(category) {\r\n    if (category !== undefined) {\r\n      let newCat = [];\r\n      let shouldBeRandom = true;\r\n      for (let el of this.state.addedCategories) {\r\n        let tempEl = {};\r\n        if (el.name === category) tempEl = { name: el.name, selected: !el.selected };\r\n        else tempEl = el;\r\n        if (tempEl.selected === true) shouldBeRandom = false;\r\n        newCat.push(tempEl);\r\n      }\r\n      this.setState({ randomCat: shouldBeRandom, addedCategories: newCat });\r\n    } else this.setState(this.randomTab);\r\n  }\r\n\r\n  render() {\r\n    let i = 0;\r\n    return (\r\n      <div className=\"menu\">\r\n        <span className=\"menu__heading\">Gra w wisielca!</span>\r\n        <div className=\"categories\">\r\n          <span className=\"categories__heading\">Wybierz kategorie:</span>\r\n          <div className=\"categories__random\">\r\n            <Button text=\"Losowa\" addClass={'menu__button categories__button ' + (this.state.randomCat ? 'categories__button--selected' : '')} click={() => this.categorySelect()} />\r\n          </div>\r\n          <div className=\"categories__additional\">\r\n            {this.state.addedCategories.map(e => (\r\n              <Button\r\n                key={'category_' + i++}\r\n                text={e.name}\r\n                addClass={'menu__button categories__button ' + (e.selected ? 'categories__button--selected' : '')}\r\n                click={() => this.categorySelect(e.name)}\r\n              />\r\n            ))}\r\n          </div>\r\n          <span className=\"categories__heading\">Wybierz poziom trudności:</span>\r\n          <div className=\"categories__difficulty\">\r\n            <div style={{ width: '100%', display: 'flex', justifyContent: 'center' }}>\r\n              <Button\r\n                text={'Łatwy'}\r\n                addClass={'menu__button categories__button categories__button__diff ' + (this.state.difficulty === 0 ? 'categories__button--selected' : '')}\r\n                click={() => this.setState({ difficulty: 0 })}\r\n              />\r\n              <Button\r\n                text={'Średni'}\r\n                addClass={'menu__button categories__button categories__button__diff ' + (this.state.difficulty === 1 ? 'categories__button--selected' : '')}\r\n                click={() => this.setState({ difficulty: 1 })}\r\n              />\r\n              <Button\r\n                text={'Trudny'}\r\n                addClass={'menu__button categories__button categories__button__diff ' + (this.state.difficulty === 2 ? 'categories__button--selected' : '')}\r\n                click={() => this.setState({ difficulty: 2 })}\r\n              />\r\n            </div>\r\n            <div className=\"categories__difficulty__letter\">\r\n              <input type=\"checkbox\" onClick={() => this.setState({ randomLetter: !this.state.randomLetter })} /> <span>Losowa litera na start</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Button\r\n          text=\"Graj\"\r\n          addClass=\"menu__button menu__button__play\"\r\n          click={() => this.props.toggleGame(this.state.difficulty, this.state.randomCat ? [] : this.state.addedCategories.filter(e => e.selected).map(e => e.name), this.state.randomLetter)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Game from './components/Game/Game';\r\nimport Keyboard from './components/Keyboard/Keyboard';\r\nimport MainMenu from './components/MainMenu/MainMenu';\r\nimport Button from './components/Button/Button';\r\nimport Words from './assets/words';\r\nimport './App.scss';\r\n\r\nconst DIFF = ['easy', 'medium', 'hard'];\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { event: '', word: '', gameStarted: false, clicked: [] };\r\n    this.toggleGame = this.toggleGame.bind(this);\r\n    this.gameEvent = this.gameEvent.bind(this);\r\n    this.replayGame = this.replayGame.bind(this);\r\n    this.contentScreen = React.createRef();\r\n  }\r\n  toggleGame(difficulty, categories, randomLetter) {\r\n    this.contentScreen.current.style.opacity = 0;\r\n    setTimeout(() => {\r\n      this.contentScreen.current.style.opacity = 1;\r\n      if (categories.length === 0) categories = Object.keys(Words);\r\n      let cat = categories[Math.round(Math.random() * (categories.length - 1))];\r\n      let word = Words[cat][DIFF[difficulty]][Math.round(Math.random() * (Words.Imiona.easy.length - 1))];\r\n      this.setState({\r\n        word: word,\r\n        gameStarted: !this.state.gameStarted,\r\n        pickedCategory: cat,\r\n        randomLetter: randomLetter ? word[Math.round(Math.random() * (word.length - 1))] : ''\r\n      });\r\n    }, 1000);\r\n  }\r\n  gameEvent(event) {\r\n    setTimeout(() => {\r\n      this.contentScreen.current.style.opacity = 0;\r\n      setTimeout(() => {\r\n        this.setState({ event: event });\r\n        this.contentScreen.current.style.opacity = 1;\r\n      }, 1000);\r\n    }, 750);\r\n  }\r\n  replayGame() {\r\n    this.contentScreen.current.style.opacity = 0;\r\n    setTimeout(() => {\r\n      this.setState({ event: '', word: '', gameStarted: false, clicked: [] });\r\n      this.contentScreen.current.style.opacity = 1;\r\n    }, 1000);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"content\" ref={this.contentScreen}>\r\n          {this.state.gameStarted ? (\r\n            this.state.event.length > 0 ? (\r\n              <div className=\"menu__ending\">\r\n                <div className=\"menu__heading\">{this.state.event === 'win' ? 'Gratulacje, twoje słowo to: ' + this.state.word + '!' : 'Niestety, może uda się następnym razem.'}</div>\r\n                <div>Aby zagrać jeszcze raz, naciśnij przycisk poniżej.</div>\r\n                <Button addClass=\"menu__button menu__button__play\" text=\"Zagraj ponownie\" click={this.replayGame} />\r\n              </div>\r\n            ) : (\r\n              <div className=\"content__wrapper\">\r\n                <Game category={this.state.pickedCategory} gameEvent={this.gameEvent} currentWord={this.state.word} clicked={this.state.clicked} />\r\n                <div className=\"keyboard\">\r\n                  <Keyboard randomLetter={this.state.randomLetter || null} fnClicked={letter => this.setState({ clicked: [...this.state.clicked, letter] })} />\r\n                </div>\r\n              </div>\r\n            )\r\n          ) : (\r\n            <div className=\"content__wrapper\">\r\n              <MainMenu toggleGame={this.toggleGame} categories={Object.keys(Words)} />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"footing\">\r\n          <span>Sebastian Rachfał | 2020</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}